//---------------------------------------------------------------------------
//
// Project: OpenWalnut ( http://www.openwalnut.org )
//
// Copyright 2009 OpenWalnut Community, BSV@Uni-Leipzig and CNCF@MPI-CBS
// For more information see http://www.openwalnut.org/copying
//
// This file is part of OpenWalnut.
//
// OpenWalnut is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// OpenWalnut is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with OpenWalnut. If not, see <http://www.gnu.org/licenses/>.
//
//---------------------------------------------------------------------------

#ifndef WOUTPUTPROPERTYHANDLER_H
#define WOUTPUTPROPERTYHANDLER_H

#include "../WProtonData.h"

/**
 * Creates, updates and handles the output properties.
 */
class WOutputPropertyHandler
{
public:
    /**
     * shared_ptr that points to itself.
     */
    typedef std::shared_ptr< WOutputPropertyHandler > SPtr;

    /**
     * Function typedf for updating the data.
     */
    typedef boost::function< void() > CallbackPtr;

    /**
     * constructor
     * 
     * \param protonData Pointer to the content and header of the CSV.
     * \param properties A property variable that is generated by the WModul.
     * \param dataUpdate A function variable that reinitializes the WDataSets.
     */
    explicit WOutputPropertyHandler( WProtonData::SPtr protonData, WPropertyGroup::SPtr properties, WOutputPropertyHandler::CallbackPtr dataUpdate );

    /**
     * creates the group property and the subroperties.
     */
    void createProperties();

    /**
     * update current group property and the subproperties.
     */
    void updateProperties();

    /**
     * Getter
     * \return WPropBool of the energy deposition.
     */
    WPropBool getEnergyDeposition();

    /**
     * Getter
     * \return WPropBool of the eventID.
     */
    WPropBool getEventID();

private:
    WProtonData::SPtr m_protonData;                     //!< Pointer to the content and header of the CSV.
    WPropertyGroup::SPtr m_properties;                  //!< A property variable that is generated by the WModul.
    WOutputPropertyHandler::CallbackPtr m_dataUpdate;   //!< A function variable that reinitializes the WDataSets.

    WPropBool m_energyDeposition;   //!< Whether to send the energy deposition or not.
    WPropBool m_eventID;            //!< Whether to send the eventID or not.
};

#endif  // WOUTPUTPROPERTYHANDLER_H
